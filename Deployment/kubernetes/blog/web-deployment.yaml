apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: web
  name: web
  namespace: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: web
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: web
    spec:
      containers:
        - args:
            - chmod
            - u+x
            - /myapp/bin/entry.sh
          command:
             - myapp/bin/entry.sh
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_HOST
                  name: env
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_NAME
                  name: env
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: database-password
            - name: DATABASE_USER
              valueFrom:
                configMapKeyRef:
                  key: DATABASE_USER
                  name: env
            - name: RAILS_ENV
              value: development
          image: dharnel/blog:2.0
          name: web
          ports:
            - containerPort: 3000
          resources: {}
          volumeMounts:
            - mountPath: /myapp
              name: web-claim0
              subPath: myapp
          workingDir: /myapp
      restartPolicy: Always
      volumes:
        - name: web-claim0
          persistentVolumeClaim:
            claimName: web-claim0
status: {}
