pipeline {
    agent any
    environment {
        AWS_ACCESS_KEY_ID = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
        AWS_DEFAULT_REGION = "eu-west-2"
    }
    stages {
        stage("Initialize terraform") {
            steps {
                script {
                    dir('Deployment/terraform') {
                        sh "terraform init"
                    }
                }
            }
        }
        
        stage('Create an EKS Cluster'){
            steps{
                withAWS(credentials: 'ilab-aws', region: 'eu-west-2') {
                script {
                    dir('Deployment/terraform') {
                        sh 'terraform apply --auto-approve -lock=false'
                    }
                }
                }
            }
        }
        stage("Deploy to EKS") {
            steps{
                withAWS(credentials: 'ilab-aws', region: 'eu-west-2') {
                script {
                    dir('Deployment/kubernetes') {
                    	sh 'aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID'
                    	sh 'aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY'
                    	sh 'aws configure set region $AWS_DEFAULT_REGION'
                        sh "aws eks update-kubeconfig --name my-K8s-cluster"
                        sh "kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.6.4/deploy/static/provider/aws/deploy.yaml"
                        sh "kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml"
                        sh "kubectl apply -f complete-demo.yaml"
                        sh "kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.9.1/cert-manager.yaml"

                        sh "kubectl apply -f secret.yaml"

                        sh "kubectl apply -f laravel-dep"

                        sh 'kubectl create secret generic route53-secret --namespace=myapp --from-literal=secret-access-key=$AWS_SECRET_ACCESS_KEY'

                        sh "kubectl apply -f myapp-acme-issuer.yaml"

                        sh "kubectl apply -f myapp-certificate.yaml"

                        sh "kubectl create -f prometheus/00-monitoring-ns.yaml"

                        sh "kubectl apply -f prometheus"

                        sh "kubectl apply -f grafana"
                            
                        sh 'kubectl create secret generic route53-secret --namespace=sock-shop --from-literal=secret-access-key=$AWS_SECRET_ACCESS_KEY'
                        
                        sh "kubectl apply -f acme-issuer.yaml"
                            
                        sh "kubectl apply -f certificate.yaml"

                        sh 'kubectl create secret generic route53-secret --namespace=monitoring --from-literal=secret-access-key=$AWS_SECRET_ACCESS_KEY'

                        sh "kubectl apply -f monitoring-acme-issuer.yaml"

                        sh "kubectl apply -f monitoring-certificate.yaml"

                        sh "kubectl apply -f 23-grafana-import-dash-batch.yaml"
                            
                        sh "kubectl apply -f ingress.yaml"
                            
                        sh "kubectl apply -f myapp-ingress.yaml"

                        sh "kubectl apply -f monitoring-ingress.yaml"
                        
                    }
                }
                }
            }
        }
        }
    }

